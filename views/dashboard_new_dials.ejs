<!-- views/profile.ejs -->
<!doctype html>
<html>
<head>
  

	<title>Dashboard</title>
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
	<style>
		body 		{ padding-top:2px; word-wrap:break-word; }
	</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js"></script>
<script src="https://code.highcharts.com/stock/highstock.js"></script>
<script src="https://code.highcharts.com/stock/modules/exporting.js"></script>
<script src="http://blacklabel.github.io/indicators/js/rsi.js"></script>
<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>

<script src="https://code.highcharts.com/modules/solid-gauge.js"></script>

<script>
$(document).ready(function(){

 
	var username=null;
  var socket=io.connect('http://127.0.0.1:3000');
  
  var live_chart=null;

	$("#savePortfolio").hide()
	$("#addStock").hide()
	$("#removeStock").hide()
	$("#stockesGroup").hide()
	var counter = 2;

	//on start up
	socket.on('portfolio_list', function(portfolios){


	var s=document.getElementById("portfolioList");
   for (var i=0;i<portfolios.length;i++){
         var portfolioName=(portfolios[i]);    
         var p='portfolio'+[i];
         $('<option />', {value: portfolioName , text: portfolioName}).appendTo(s);   
         }      
	});

	socket.on('portfolio_add', function(portfolioName){


         //add the recieved portofolio to the list
         var s=document.getElementById("portfolioList");
         $('<option />', {value:portfolioName , text: portfolioName}).appendTo(s);   
    });


  socket.on('live_data2',function(data){

  var series=live_chart.series[0]; 
  var x = (new Date()).getTime(); // current time
  var y = data;
  series.addPoint([x, y], true, true);
  
  });  

  socket.on('beta',function(factors)){


    if (factor1) {
        point = factor1.series[0].points[0];
        inc = Math.round((Math.random());
        newVal = point.y + inc;

        if (newVal < 0 || newVal > 200) {
            newVal = point.y - inc;
        }

        point.update(newVal);
    }






  }

  $("#addPortfolio").click(function(){

	$("#savePortfolio").show()
	$("#addStock").show()
	$("#removeStock").show()
	$("#stockesGroup").show()
	});


  $("#addStock").click(function () {
		if(counter>10){
            alert("Only 10 stockes allow");
            return false;
			}

		var newstockDiv = $(document.createElement('div')).attr("id", 'stockDiv' + counter);

		var label1='<label>Ticker #'+ counter + ' : </label>' +
	      '<input type="text" name="stock' + counter +
	      '" id="stock' + counter + '" value="" >' 

		var label2='<label>Dollar value #'+ counter + ' : </label>' +
	      '<input type="number" name="value' + counter +
	      '" id="value' + counter + '" value="" >';
       	
    	newstockDiv.after().html(label1 + label2);

    	newstockDiv.appendTo("#stockesGroup");
		counter++;
     });

     $("#removeStock").click(function () {
		if(counter==1){
          alert("No more stocks to remove");
          return false;
       	}
		counter--;
        $("#stockDiv" + counter).remove();

     });

     $("#savePortfolio").click(function () {

		var tickers = [];
		var weight= [];
		var total_value=0;
		for(i=1; i<counter; i++){

	  	var ticker=$('#stock' + i).val()
	  	tickers.push(ticker);

	  	var value= $('#value' + i).val()
 		  weight.push( $('#value' + i).val());
   	  	
   	  	total_value= total_value + parseFloat( $('#value' + i).val());  //need to check how to use number during form validation
   		
		 }


		var weights=[]
		var sum;
		for(var i=0;i<weight.length;i++) {
			weights.push(weight[i]/total_value)
			sum=sum+parseFloat(weight[i]);
		}

		
		portfolio={ 'tickers' : tickers, 
    	            'weights': weights,
    	            'user':  username,

    	          }


    	//add a small delay to collect all the information before sending to server          
    	setTimeout(function() {


 		 
 		 socket.emit('portfolio', portfolio)
    alert('Portfolio and validated created send to server with total weights:' + total_value)



			
		}, 500);
           

    	 
               

    //now rest may be add delay
   	$("#savePortfolio").hide()
	$("#addStock").hide()
	$("#removeStock").hide()
	$("#stockesGroup").hide()
	$("#livecharts").hide()
	counter = 2;  //reset the counter to two
     });


    $("#choosePortfolio").click(function () {

      //get the selected portfolio name and emit to server 
      var selectPortfolio=$("#portfolioList").val();
      alert(selectPortfolio);
      socket.emit('selected_portfolio',selectPortfolio);
      $("#livecharts").show()

      });


  
Highcharts.setOptions({
    global: {
        useUTC: false
    }
});

// Create the chart
Highcharts.stockChart('livecharts', {
    chart: {
        events: {
            load: function () {

             live_chart=this;
            }
        }
    },

   indicators: [{
            id: 'portfolio',
            type: 'rsi',
            params: {
                period: 14,
                overbought: 70,
                oversold: 30
            },
            styles: {
                strokeWidth: 2,
                stroke: 'black',
                dashstyle: 'solid'
            },
            yAxis: {
                lineWidth:2,
                title: {
                    text:'My RSI title'
                }
            }   
}], 


    title: {
        text: 'Portfolio'
    },

    exporting: {
        enabled: false
    },

    series: [{
        name: 'portfolio',
        data: (function () {
            // generate an array of random data
            var data = [],
                time = (new Date()).getTime(),
                i;

            for (i = -99; i <= 0; i += 1) {
                data.push([
                    time + i * 1000,
                    Math.round(Math.random()*0)
                ]);
            }
            return data;
        }())
    }]
});



var gaugeOptions = {

    chart: {
        type: 'solidgauge'
    },

    title: null,

    pane: {
        center: ['50%', '85%'],
        size: '140%',
        startAngle: -90,
        endAngle: 90,
        background: {
            backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || '#EEE',
            innerRadius: '60%',
            outerRadius: '100%',
            shape: 'arc'
        }
    },

    tooltip: {
        enabled: false
    },

    // the value axis
    yAxis: {
        stops: [
            [0.1, '#55BF3B'], // green
            [0.5, '#DDDF0D'], // yellow
            [0.9, '#DF5353'] // red
        ],
        lineWidth: 0,
        minorTickInterval: null,
        tickAmount: 2,
        title: {
            y: -70
        },
        labels: {
            y: 16
        }
    },

    plotOptions: {
        solidgauge: {
            dataLabels: {
                y: 5,
                borderWidth: 0,
                useHTML: true
            }
        }
    }
};

var factor1 = Highcharts.chart('factor1', Highcharts.merge(gaugeOptions, {
    yAxis: {
        min: 0,
        max: 1,
        title: {
            text: 'SNP 500(SPY)'
        }
    },

    credits: {
        enabled: false
    },

    series: [{
        name: 'factors1',
        data: [0],
        dataLabels: {
            format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                   '<span style="font-size:12px;color:silver"></span></div>'
        },
        tooltip: {
            valueSuffix: ' lightyear'
        }
    }]

}));

var factor2 = Highcharts.chart('factor2', Highcharts.merge(gaugeOptions, {
    yAxis: {
        min: 0,
        max: 1,
        title: {
            text: 'OIL(USO)'
        }
    },

    credits: {
        enabled: false
    },

    series: [{
        name: 'Jpphd',
        data: [80],
        dataLabels: {
            format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                   '<span style="font-size:12px;color:silver"></span></div>'
        },
        tooltip: {
            valueSuffix: ' lightyear'
        }
    }]

}));
var factor3 = Highcharts.chart('factor3', Highcharts.merge(gaugeOptions, {
    yAxis: {
        min: 0,
        max: 1,
        title: {
            text: 'GOLD(GLD)'
        }
    },

    credits: {
        enabled: false
    },

    series: [{
        name: 'Jpphd',
        data: [80],
        dataLabels: {
            format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                   '<span style="font-size:12px;color:silver"></span></div>'
        },
        tooltip: {
            valueSuffix: ' lightyear'
        }
    }]

}));
var factor4 = Highcharts.chart('factor4', Highcharts.merge(gaugeOptions, {
    yAxis: {
        min: 0,
        max: 1,
        title: {
            text: '1 year treasury(SHY)'
        }
    },

    credits: {
        enabled: false
    },

    series: [{
        name: 'Jpphd',
        data: [80],
        dataLabels: {
            format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                   '<span style="font-size:12px;color:silver"></span></div>'
        },
        tooltip: {
            valueSuffix: ' lightyear'
        }
    }]

}));
var factor5 = Highcharts.chart('factor5', Highcharts.merge(gaugeOptions, {
    yAxis: {
        min: 0,
        max: 1,
        title: {
            text: '20 year treasury (TLT)'
        }
    },

    credits: {
        enabled: false
    },

    series: [{
        name: 'Jpphd',
        data: [80],
        dataLabels: {
            format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                   '<span style="font-size:12px;color:silver"></span></div>'
        },
        tooltip: {
            valueSuffix: ' lightyear'
        }
    }]

}));
var factor6 = Highcharts.chart('factor6', Highcharts.merge(gaugeOptions, {
    yAxis: {
        min: 0,
        max: 1,
        title: {
            text: 'Bond Aggreaate (AGG)'
        }
    },

    credits: {
        enabled: false
    },

    series: [{
        name: 'Jpphd',
        data: [80],
        dataLabels: {
            format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                   '<span style="font-size:12px;color:silver"></span></div>'
        },
        tooltip: {
            valueSuffix: ' lightyear'
        }
    }]

}));

var factor7 = Highcharts.chart('factor7', Highcharts.merge(gaugeOptions, {
    yAxis: {
        min: 0,
        max: 1,
        title: {
            text: 'Commodity Index (GSG)'
        }
    },

    credits: {
        enabled: false
    },

    series: [{
        name: 'Jpphd',
        data: [80],
        dataLabels: {
            format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                   '<span style="font-size:12px;color:silver"></span></div>'
        },
        tooltip: {
            valueSuffix: ' lightyear'
        }
    }]

}));

var factor8 = Highcharts.chart('factor8', Highcharts.merge(gaugeOptions, {
    yAxis: {
        min: 0,
        max: 1,
        title: {
            text: 'UP Dollar Bullish (UUP)'
        }
    },

    credits: {
        enabled: false
    },

    series: [{
        name: 'Jpphd',
        data: [80],
        dataLabels: {
            format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                   '<span style="font-size:12px;color:silver"></span></div>'
        },
        tooltip: {
            valueSuffix: ' lightyear'
        }
    }]

}));


/



  

  });//document ready





</script>


</head>
<body>
<div class="container">

	<div class="page-header text-centre">
		<a> <strong><%= user.username %>'s </strong>   </a>
    <a href="/dashboard" class="btn btn-default">Risk Dashboard</a>
    <a href="/addPortfolio" class="btn btn-default">Portfolios</a>
    <a href="/optimiser" class="btn btn-default">Portfolio Optimiser</a>
    <a href="/order" class="btn btn-default">Order</a>
    <a href="/news" class="btn btn-default">News</a>
    <a href="/logout" class="btn btn-default">Logout</a>


</div>

	<footer>

  <a> <strong>Select Portfolio </strong>   </a>
	
	<select id="portfolioList" data-theme="a" data-mini="true" name="Your portfolios">
			<option value=""> </option>

	</select>
	<input type='button' value='Submit' class="btn btn-default" id='choosePortfolio'>

	<footer>	

</div>
<div id="livecharts" style="height: 400px; min-width: 310px"></div>


<div style="width: 1200px; height: 400px; margin: 0 auto">
    <div id="factor1" style="width: 300px; height: 200px; float: left"></div>

    <div id="factor2" style="width: 300px; height: 200px; float: left"></div>

    <div id="factor3" style="width: 300px; height: 200px; float: left"></div>

    <div id="factor4" style="width: 300px; height: 200px; float: left"></div>
</div>
<div style="width: 1200px; height: 400px; margin: 0 auto">
    <div id="factor5" style="width: 300px; height: 200px; float: left"></div>
    
    <div id="factor6" style="width: 300px; height: 200px; float: left"></div>

    <div id="factor7" style="width: 300px; height: 200px; float: left"></div>

    <div id="factor8" style="width: 300px; height: 200px; float: left"></div>
</div>



</body>
</html>
